#橙书Algorithms(Fourth Edition)

###1.1基础编程模型

####练习
1.1.1 
	a. 7
	b.200.0000002
	c.true
1.1.2
	a.double   1.618
	b.double   10.0
	c.boolean  true
	d.string   "123"
1.1.3

		```	
		import java.util.Scanner;

		public class Tirequal {
			public static boolean isEqual(int n1,int n2){
				if(n1 == n2) return true;
				else		return false;
			} 

			public static void main(String[] args) {
				// TODO Auto-generated method stub
				Scanner in = new Scanner(System.in);
				int num1 = in.nextInt();
				int num2 = in.nextInt();
				int num3 = in.nextInt();

				if(isEqual(num1,num2)&&isEqual(num2,num3)){
					System.out.print("equal");
				}
				else	System.out.print("not equal");
			}

		}
		```
		
1.1.4
	a.then
	b.if后的条件要用（）括住
	c.没问题
	d.`c=0` `b=0`这两句代码后面没有加`;`
1.1.5
	```
	public class doubl0_1
	{
		public static boolean double01(double num)
		{
			if(num>0 && num<1) return true;
			else return false;
		}
		public static void main(double num1,double num2)
		{
			double n1 = In.readDoubles(num1);
			double n2 = In.readDoubles(num2);
			if(double01(n1) && double01(n2))
			{
				StdOut.println("true");
			}
			else StdOut.println("false");
		}
	}
	```
1.1.6
	0	
	1	
	1	
	2	
	3	
	5	
	8	
	13
	21	
	34
	55
	89
	144
	233
	377
	600
	——————————————————————————————————————————————————————————————12.12/18：01以上为手撸结果，下为程序结果
	0
	1
	1
	2
	3
	5
	8
	13
	21
	34
	55
	89
	144
	233
	377
	610
	（这个故事告诉我们一定要学会用计算机，省时省力）
	
1.1.7
	a. 0.00009
	b. 499500
	c. 10000
	（这一题是用c语言撸出来的，告诉我们一个道理就是什么语言都行的）	
1.1.8
	a. b
	b. 197
	c. e
	（这个故事告诉我们关于Java的输出，我们还知道的太少）	
1.1.9
	String s = "";
	for(int n=N; n>0; n/=2)
		s = (n%2) + s;
————————————————————————————————————讲道理不能理解这一题，于是写了测试函数
public class Exchangemn {

	public static void main(String[] args) {
		// TODO Auto-generated method stub

		String s = "";
		System.out.println(s);		//测试s是个什么		
		for(int n=199; n>0; n/=2){
			System.out.println(n);	//测试每一次的n是什么			
			s = (n%2) + s;
			System.out.println(s);	//测试每次的s变化		
}	

		System.out.println(s);		//s的结果
    }
}
//测试结果

199
1
99
11
49
111
24
0111
12
00111
6
000111
3
1000111
1
11000111
11000111
——————————————————————————测试结束，说明Java的输出字符串输出有种神奇的特性，这是较C语言不同的地方，比较神奇
1.1.10
        它没有用new为a[]分配内存，这段代码会产生一个variable a might not have been initialized的错误编译。
	
1.1.11
	!!!这题我不行，我不知道布尔数组是什么东西，我怀疑还有可能是翻译版本的问题
1.1.12
	打印结果：0
		 1
		 2
		 3
		 4
		 5
		 6
		 7
		 8
		 9
1.1.13讲道理我觉得翻译真心有问题，M行N列的二维数组是怎么回事。
1.1.14
```
	import java.util.Scanner;

	public class Exchangemn {
		public static int Minlog2n(int N){
			int c = 0;
			while(N>0){
				N = N/2;
				if(N>0)
					c++;
			}
			return c;
		}

		public static void main(String[] args) {
			// TODO Auto-generated method stub
			Scanner in = new Scanner(System.in);
			int N = in.nextInt();
			System.out.println(Minlog2n(N));
	    }
	}
```
1.1.15
	
